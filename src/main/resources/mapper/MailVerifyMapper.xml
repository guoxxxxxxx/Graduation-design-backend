<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hebust.mapper.MailVerifyMapper">
  <resultMap id="BaseResultMap" type="com.hebust.entity.mailVerify.MailVerify">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="verify_code" jdbcType="VARCHAR" property="verifyCode" />
  </resultMap>
  <sql id="Base_Column_List">
    id, email, verify_code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mail_verify
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="isEmailExist" resultType="java.lang.Integer">
    select count(email) from mail_verify where email = #{email,jdbcType=VARCHAR}
  </select>
  <select id="selectVerifyCodeByEmail" resultType="java.lang.String">
    select verify_code from mail_verify where email = #{email,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mail_verify
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByEmail">
    delete from mail_verify
    where email = #{email,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hebust.entity.mailVerify.MailVerify" useGeneratedKeys="true">
    insert into mail_verify (email, verify_code)
    values (#{email,jdbcType=VARCHAR}, #{verifyCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hebust.entity.mailVerify.MailVerify" useGeneratedKeys="true">
    insert into mail_verify
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="email != null">
        email,
      </if>
      <if test="verifyCode != null">
        verify_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="verifyCode != null">
        #{verifyCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hebust.entity.mailVerify.MailVerify">
    update mail_verify
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="verifyCode != null">
        verify_code = #{verifyCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hebust.entity.mailVerify.MailVerify">
    update mail_verify
    set email = #{email,jdbcType=VARCHAR},
      verify_code = #{verifyCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateVerifyCodeByEmail">
    update mail_verify
    set verify_code = #{verifyCode,jdbcType=VARCHAR}
    where email = #{email,jdbcType=VARCHAR}
  </update>
</mapper>