<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hebust.mapper.AlumniDiscussMapper">
  <resultMap id="BaseResultMap" type="com.hebust.entity.alumni.AlumniDiscuss">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="comment_uid" jdbcType="INTEGER" property="commentUid" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>

  <!--所有需要用到的信息-->
  <resultMap id="allInfo" type="com.hebust.entity.alumni.AlumniDiscuss">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="comment_uid" jdbcType="INTEGER" property="commentUid" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <association property="commentUser" column="comment_uid" select="com.hebust.mapper.UserMapper.selectSimplifyUserById"/>
    <collection property="childrenList" column="id" ofType="com.hebust.entity.alumni.AlumniReply"
                select="com.hebust.mapper.relation.AlumniReplyMapper.queryReply"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, comment_uid, content, create_date, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from alumni_discuss
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="queryDiscuss" resultMap="allInfo">
    select * from alumni_discuss
    where is_delete = 0 and content like "%" #{fuzzyParam} "%"
  </select>
  <select id="queryDiscussCount" resultType="java.lang.Integer">
    select count(*) from alumni_discuss
    where is_delete = 0 and content like "%" #{fuzzyParam} "%"
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from alumni_discuss
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hebust.entity.alumni.AlumniDiscuss" useGeneratedKeys="true">
    insert into alumni_discuss (comment_uid, content, create_date, 
      is_delete)
    values (#{commentUid,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hebust.entity.alumni.AlumniDiscuss" useGeneratedKeys="true">
    insert into alumni_discuss
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentUid != null">
        comment_uid,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentUid != null">
        #{commentUid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
    <insert id="sendDiscuss">
      insert into alumni_discuss(comment_uid, content, create_date)
      values (#{commentUid}, #{content}, #{createDate})
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hebust.entity.alumni.AlumniDiscuss">
    update alumni_discuss
    <set>
      <if test="commentUid != null">
        comment_uid = #{commentUid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hebust.entity.alumni.AlumniDiscuss">
    update alumni_discuss
    set comment_uid = #{commentUid,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>