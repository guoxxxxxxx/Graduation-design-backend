<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hebust.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.hebust.entity.user.User">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="faculty" jdbcType="VARCHAR" property="faculty" />
    <result column="grade" jdbcType="CHAR" property="grade" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="password" jdbcType="VARCHAR" property="password"/>
  </resultMap>
  <sql id="Base_Column_List">
    `uid`, `name`, sex, birthday, phone, faculty, grade, major, email, wechat, qq, is_delete, password
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where `uid` = #{uid,jdbcType=INTEGER}
  </select>
  <select id="selectByEmail" resultType="java.lang.Integer">
    select count(email) from user where email = #{email,jdbcType=VARCHAR}
  </select>
  <select id="selectPasswordByEmail" resultType="java.lang.String">
    select password from USER where `email` = #{email,jdbcType=VARCHAR}
  </select>
  <select id="selectAllByEmail" resultType="com.hebust.entity.user.User">
    select <include refid="Base_Column_List" />
    from USER
    where `email` = #{email,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where `uid` = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="uid" keyProperty="uid" parameterType="com.hebust.entity.user.User" useGeneratedKeys="true">
    insert into user (`name`, sex, birthday, 
      phone, faculty, grade, major, 
      email, wechat, qq, 
      is_delete, password)
    values (#{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, 
      #{phone,jdbcType=CHAR}, #{faculty,jdbcType=VARCHAR}, #{grade,jdbcType=CHAR}, #{major,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hebust.entity.user.User">
    update user
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="faculty != null">
        faculty = #{faculty,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=CHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where `uid` = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hebust.entity.user.User">
    update user
    set `name` = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      phone = #{phone,jdbcType=CHAR},
      faculty = #{faculty,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=CHAR},
      major = #{major,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where `uid` = #{uid,jdbcType=INTEGER}
  </update>
</mapper>