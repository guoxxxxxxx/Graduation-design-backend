<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hebust.mapper.relation.AlumniReplyMapper">
  <resultMap id="BaseResultMap" type="com.hebust.entity.alumni.AlumniReply">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="comment_uid" jdbcType="INTEGER" property="commentUid" />
    <result column="target_uid" jdbcType="INTEGER" property="targetUid" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="parent_discuss_id" jdbcType="INTEGER" property="parentDiscussId"/>
  </resultMap>

  <!--管理员-->
  <resultMap id="ManagerTable" type="com.hebust.entity.table.ReplyTable">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="comment_uid" jdbcType="INTEGER" property="pubUser" />
    <result column="target_uid" jdbcType="INTEGER" property="targetId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_date" jdbcType="TIMESTAMP" property="date" />
    <association property="pubUserName" column="comment_uid"
                 select="com.hebust.mapper.UserMapper.getUserName"/>
    <association property="targetName" column="target_uid" select="com.hebust.mapper.UserMapper.getUserName"/>
  </resultMap>

  <!--所有回复信息-->
  <resultMap id="allInfo" type="com.hebust.entity.alumni.AlumniReply">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="comment_uid" jdbcType="INTEGER" property="commentUid" />
    <result column="target_uid" jdbcType="INTEGER" property="targetUid" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="parent_discuss_id" jdbcType="INTEGER" property="parentDiscussId"/>
    <association property="commentUser" column="comment_uid" select="com.hebust.mapper.UserMapper.selectSimplifyUserById"/>
    <association property="targetUser" column="target_uid" select="com.hebust.mapper.UserMapper.selectSimplifyUserById"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, comment_uid, target_uid, content, create_date, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from alumni_reply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="queryReply" resultMap="allInfo">
    select * from alumni_reply where parent_discuss_id = #{did} and is_delete = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from alumni_reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hebust.entity.alumni.AlumniReply" useGeneratedKeys="true">
    insert into alumni_reply (comment_uid, target_uid, content, 
      create_date, is_delete)
    values (#{commentUid,jdbcType=INTEGER}, #{targetUid,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hebust.entity.alumni.AlumniReply" useGeneratedKeys="true">
    insert into alumni_reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentUid != null">
        comment_uid,
      </if>
      <if test="targetUid != null">
        target_uid,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentUid != null">
        #{commentUid,jdbcType=INTEGER},
      </if>
      <if test="targetUid != null">
        #{targetUid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
    <insert id="sendReply">
      insert into alumni_reply(comment_uid, target_uid, content, create_date, parent_discuss_id)
      values (#{commentUid}, #{targetUid}, #{content}, #{createDate}, #{parentDiscussId})
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hebust.entity.alumni.AlumniReply">
    update alumni_reply
    <set>
      <if test="commentUid != null">
        comment_uid = #{commentUid,jdbcType=INTEGER},
      </if>
      <if test="targetUid != null">
        target_uid = #{targetUid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hebust.entity.alumni.AlumniReply">
    update alumni_reply
    set comment_uid = #{commentUid,jdbcType=INTEGER},
      target_uid = #{targetUid,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>